# Prometheus Configuration for MeetingMind Observability

global:
  scrape_interval: 15s
  evaluation_interval: 15s

rule_files:
  - "alert_rules.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

scrape_configs:
  # OpenTelemetry Collector metrics
  - job_name: 'otel-collector'
    static_configs:
      - targets: ['otel-collector:8889']
    scrape_interval: 10s
    metrics_path: /metrics

  # Application metrics (if directly exposed)
  - job_name: 'meetingmind-frontend'
    static_configs:
      - targets: ['host.docker.internal:3000']
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s

  # Backend services metrics
  - job_name: 'meetingmind-backend'
    static_configs:
      - targets: ['host.docker.internal:8000']
    scrape_interval: 15s
    metrics_path: /metrics

  # System metrics (node exporter)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s

  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Grafana metrics
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    metrics_path: /metrics

  # Jaeger metrics
  - job_name: 'jaeger'
    static_configs:
      - targets: ['jaeger:14269']
    metrics_path: /metrics

  # Custom application-specific scraping
  - job_name: 'meetingmind-custom-metrics'
    static_configs:
      - targets: ['host.docker.internal:9091']
    scrape_interval: 30s
    honor_labels: true
    params:
      'format': ['prometheus']

# Remote write configuration (for long-term storage)
# remote_write:
#   - url: "https://your-remote-prometheus-endpoint/api/v1/write"
#     headers:
#       "Authorization": "Bearer your-token-here"

# Remote read configuration (for federation)
# remote_read:
#   - url: "https://your-remote-prometheus-endpoint/api/v1/read"