version: '3.8'

services:
  streaming-server:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3001:3001"    # HTTP API and Dashboard
      - "1935:1935"    # RTMP
      - "9998:9998"    # SRT
      - "8443:8443"    # WebRTC WHIP
    environment:
      - NODE_ENV=production
      - PORT=3001
      - RTMP_PORT=1935
      - SRT_PORT=9998
      - WEBRTC_PORT=8443
      - JWT_SECRET=${JWT_SECRET:-your-super-secure-jwt-secret}
      - LOG_LEVEL=info
    volumes:
      - ./logs:/app/logs
      - ./recordings:/recordings
      - ./certs:/certs:ro
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - streaming-network

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - streaming-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
    depends_on:
      - streaming-server
    restart: unless-stopped
    networks:
      - streaming-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    networks:
      - streaming-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    restart: unless-stopped
    networks:
      - streaming-network

volumes:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  streaming-network:
    driver: bridge